[{"C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\index.js":"1","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\App.jsx":"2","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\LoginPage.jsx":"3","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\ChatPage.jsx":"4","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\router\\AppRouter.jsx":"5","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\Sidebar.jsx":"6","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\ChatBox.jsx":"7","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\ChatList.jsx":"8","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\Chat.jsx":"9","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\EditProfile.jsx":"10","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\api\\jsonbin.js":"11"},{"size":255,"mtime":1607507093039,"results":"12","hashOfConfig":"13"},{"size":212,"mtime":1607512519813,"results":"14","hashOfConfig":"13"},{"size":981,"mtime":1607511288491,"results":"15","hashOfConfig":"13"},{"size":2782,"mtime":1607517808875,"results":"16","hashOfConfig":"13"},{"size":500,"mtime":1607285779869,"results":"17","hashOfConfig":"13"},{"size":1298,"mtime":1607513451399,"results":"18","hashOfConfig":"13"},{"size":2419,"mtime":1607519822725,"results":"19","hashOfConfig":"13"},{"size":781,"mtime":1607517306808,"results":"20","hashOfConfig":"13"},{"size":587,"mtime":1607520510241,"results":"21","hashOfConfig":"13"},{"size":2145,"mtime":1607521616932,"results":"22","hashOfConfig":"13"},{"size":1686,"mtime":1607509551186,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"10t4v38",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\index.js",[],["50","51"],"C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\App.jsx",["52"],"import LoginPage from './LoginPage';\nimport AppRouter from '../router/AppRouter';\nimport '../styles/styles.sass';\n\nfunction App() {\n  return (\n    <div>\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\LoginPage.jsx",[],"C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\ChatPage.jsx",["53","54","55","56","57"],"C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\router\\AppRouter.jsx",["58"],"import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport App from '../components/App';\r\nimport ChatPage from '../components/ChatPage';\r\nimport LoginPage from '../components/LoginPage';\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={LoginPage}></Route>\r\n        <Route path=\"/chat\" component={ChatPage}></Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default AppRouter;","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\Sidebar.jsx",[],"C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\ChatBox.jsx",["59","60"],"import React, {useEffect, useState} from 'react';\r\nimport moment from 'moment';\r\n\r\nimport { Form, InputGroup, FormControl, Button } from 'react-bootstrap';\r\n\r\nconst ChatBox = (props) => {\r\n  let filteredMessagesArray = [];\r\n  const [ currentConversationId, setCurrentConversationId ] = useState('');\r\n  const [ displayedMessages, setDisplayedMessages ] = useState([]);\r\n\r\n  useEffect(() => {\r\n    props.conversations.map(conversation => {\r\n      if (conversation.u1id === props.currentContact.id || conversation.u2id === props.currentContact.id) {\r\n        filteredMessagesArray = props.messages.filter(message => conversation.id === message.conversationId )\r\n        setCurrentConversationId(conversation.id);\r\n      }\r\n    })\r\n    setDisplayedMessages(filteredMessagesArray);\r\n    console.log(filteredMessagesArray)\r\n    console.log(props.user)\r\n  }, [props.currentContact, props.messages]);\r\n  \r\n  const sendMessageHandler = (e) => {  \r\n    e.preventDefault();\r\n    props.sendMessageHandler({\r\n      id: Math.floor(Math.random() * Math.pow(10, 6)).toString(),\r\n      conversationId: currentConversationId,\r\n      senderId: props.user.id,\r\n      message: e.target.elements.message.value,\r\n      time: moment().format()\r\n    });\r\n    e.target.elements.message.value = '';\r\n  }\r\n  return (\r\n    <div className=\"chat-box\">\r\n      {!Object.keys(props.currentContact).length && <p>Select a contact to send a message!</p>}\r\n      {!!Object.keys(props.currentContact).length &&\r\n        <div>\r\n          {displayedMessages.map(displayedMessage => (\r\n          <div>\r\n            <p key={displayedMessage.id} className={displayedMessage.senderId === props.user.id ? 'chat-box__message chat-box__message--sender' : 'chat-box__message chat-box__message--receiver'}>{displayedMessage.message}</p>\r\n          </div>\r\n          ))}\r\n\r\n          <Form onSubmit={sendMessageHandler} className=\"chat-box__send\">\r\n            <Form.Group>\r\n              <InputGroup className=\"mb-3\">\r\n                <FormControl\r\n                  as=\"textarea\"\r\n                  name=\"message\"\r\n                  required\r\n                />\r\n                <InputGroup.Append>\r\n                  <Button variant=\"primary\" type=\"submit\">Send</Button>\r\n                </InputGroup.Append>\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </Form>\r\n        \r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBox;","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\ChatList.jsx",["61","62"],"C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\Chat.jsx",[],"C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\EditProfile.jsx",["63"],"C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\api\\jsonbin.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":17},{"ruleId":"68","severity":1,"message":"72","line":5,"column":8,"nodeType":"70","messageId":"71","endLine":5,"endColumn":12},{"ruleId":"68","severity":1,"message":"73","line":9,"column":10,"nodeType":"70","messageId":"71","endLine":9,"endColumn":19},{"ruleId":"68","severity":1,"message":"74","line":9,"column":21,"nodeType":"70","messageId":"71","endLine":9,"endColumn":24},{"ruleId":"68","severity":1,"message":"75","line":9,"column":26,"nodeType":"70","messageId":"71","endLine":9,"endColumn":29},{"ruleId":"76","severity":1,"message":"77","line":45,"column":64,"nodeType":"78","messageId":"79","endLine":45,"endColumn":66},{"ruleId":"68","severity":1,"message":"80","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":11},{"ruleId":"81","severity":1,"message":"82","line":12,"column":42,"nodeType":"83","messageId":"84","endLine":12,"endColumn":44},{"ruleId":"85","severity":1,"message":"86","line":14,"column":33,"nodeType":"87","endLine":14,"endColumn":110},{"ruleId":"81","severity":1,"message":"82","line":10,"column":46,"nodeType":"83","messageId":"84","endLine":10,"endColumn":48},{"ruleId":"81","severity":1,"message":"82","line":12,"column":40,"nodeType":"83","messageId":"84","endLine":12,"endColumn":42},{"ruleId":"68","severity":1,"message":"88","line":19,"column":9,"nodeType":"70","messageId":"71","endLine":19,"endColumn":22},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'LoginPage' is defined but never used.","Identifier","unusedVar","'data' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'App' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","Assignments to the 'filteredMessagesArray' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'updateHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]