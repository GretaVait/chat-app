[{"C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\index.js":"1","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\App.jsx":"2","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\LoginPage.jsx":"3","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\ChatPage.jsx":"4","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\router\\AppRouter.jsx":"5","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\Sidebar.jsx":"6","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\ChatBox.jsx":"7","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\ChatList.jsx":"8","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\Chat.jsx":"9","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\EditProfile.jsx":"10","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\api\\jsonbin.js":"11"},{"size":255,"mtime":1607507093039,"results":"12","hashOfConfig":"13"},{"size":212,"mtime":1607512519813,"results":"14","hashOfConfig":"13"},{"size":1079,"mtime":1607523386746,"results":"15","hashOfConfig":"13"},{"size":3054,"mtime":1607549535213,"results":"16","hashOfConfig":"13"},{"size":500,"mtime":1607285779869,"results":"17","hashOfConfig":"13"},{"size":1437,"mtime":1607549518243,"results":"18","hashOfConfig":"13"},{"size":4398,"mtime":1607557255491,"results":"19","hashOfConfig":"13"},{"size":808,"mtime":1607554201873,"results":"20","hashOfConfig":"13"},{"size":587,"mtime":1607554099155,"results":"21","hashOfConfig":"13"},{"size":2059,"mtime":1607531530827,"results":"22","hashOfConfig":"13"},{"size":1687,"mtime":1607547890344,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"10t4v38",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\index.js",[],["50","51"],"C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\App.jsx",["52"],"import LoginPage from './LoginPage';\nimport AppRouter from '../router/AppRouter';\nimport '../styles/styles.sass';\n\nfunction App() {\n  return (\n    <div>\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\LoginPage.jsx",[],"C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\ChatPage.jsx",["53","54","55"],"C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\router\\AppRouter.jsx",["56"],"import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport App from '../components/App';\r\nimport ChatPage from '../components/ChatPage';\r\nimport LoginPage from '../components/LoginPage';\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={LoginPage}></Route>\r\n        <Route path=\"/chat\" component={ChatPage}></Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default AppRouter;","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\Sidebar.jsx",[],"C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\ChatBox.jsx",["57","58"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport { Form, InputGroup, FormControl, Button, Image, Dropdown, DropdownButton } from 'react-bootstrap';\r\n\r\nimport { FaPaperPlane, FaArrowLeft } from 'react-icons/fa';\r\n\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\n\r\nimport Illustration from '../img/illustration.svg';\r\n\r\nconst ChatBox = (props) => {\r\n  let filteredMessagesArray = [];\r\n  const [ currentConversationId, setCurrentConversationId ] = useState('');\r\n  const [ displayedMessages, setDisplayedMessages ] = useState([]);\r\n\r\n  const scrollPoint = useRef();\r\n\r\n  useEffect(() => {\r\n    props.conversations.map(conversation => {\r\n      if (conversation.u1id === props.currentContact.id || conversation.u2id === props.currentContact.id) {\r\n        filteredMessagesArray = props.messages.filter(message => conversation.id === message.conversationId )\r\n        setCurrentConversationId(conversation.id);\r\n      }\r\n    })\r\n    setDisplayedMessages(filteredMessagesArray);\r\n  }, [props.currentContact, props.messages]);\r\n\r\n  useEffect(() => {\r\n    scrollPoint.current && scrollPoint.current.scrollIntoView({ behavior: 'smooth' });\r\n  }, [displayedMessages])\r\n  \r\n  const sendMessageHandler = (e) => {  \r\n    e.preventDefault();\r\n    props.sendMessageHandler({\r\n      id: Math.floor(Math.random() * Math.pow(10, 6)).toString(),\r\n      conversationId: currentConversationId,\r\n      senderId: props.user.id,\r\n      message: e.target.elements.message.value,\r\n      time: moment().format()\r\n    });\r\n    e.target.elements.message.value = '';\r\n  }\r\n\r\n  const closeChatHandler = () => {\r\n    props.closeChatHandler();\r\n  }\r\n\r\n  const deleteMessageHandler = (messageId) => {\r\n    props.deleteMessageHandler(messageId);\r\n  }\r\n\r\n  return (\r\n    <div className={!!Object.keys(props.currentContact).length ? 'chat-box visible' : 'chat-box'}>\r\n      {!Object.keys(props.currentContact).length && \r\n        <div className=\"chat-box__inactive\">\r\n          <img src={Illustration} alt=\"Illustration\" />\r\n          <h3>Select a contact to start a conversation</h3>\r\n        </div>\r\n      }\r\n      {!!Object.keys(props.currentContact).length &&\r\n        <div>\r\n          <div className=\"chat-box__header\">\r\n            <button className=\"btn\" onClick={closeChatHandler}>\r\n              <FaArrowLeft className=\"chat-box__header__back\" />\r\n            </button>\r\n            <Image\r\n              width={64}\r\n              height={64}\r\n              src={props.currentContact.image}\r\n              alt=\"\"\r\n              roundedCircle\r\n            />\r\n            <h5 className=\"chat-box__header__name\">{props.currentContact.name}</h5>\r\n          </div>\r\n          <div className=\"chat-box__send\">\r\n            <div className=\"chat-box__send__messages\">\r\n              {displayedMessages.map(displayedMessage => (\r\n              <div key={displayedMessage.id}>\r\n                <div className={\r\n                  displayedMessage.senderId === props.user.id ? \r\n                    'message message--sender' \r\n                  : 'message message--receiver'\r\n                  }>\r\n                  <p>{displayedMessage.message}</p>\r\n                  <DropdownButton title={<BsThreeDotsVertical />} className=\"message__aside\">\r\n                    <Dropdown.Item onClick={() => deleteMessageHandler(displayedMessage.id)}>Remove</Dropdown.Item>\r\n                  </DropdownButton>\r\n                  <span className=\"time\">{moment(displayedMessage.time).format('HH:mm')}</span>\r\n                </div>\r\n              </div>\r\n              ))}\r\n            <div ref={scrollPoint} style={{ float: 'right', clear: 'both' }}>current</div>\r\n            </div>\r\n\r\n            <Form onSubmit={sendMessageHandler}>\r\n              <Form.Group>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    className=\"chat-box__send__text\"\r\n                    as=\"textarea\"\r\n                    name=\"message\"\r\n                    required\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <Button variant=\"primary\" type=\"submit\" className=\"chat-box__send__btn\"><FaPaperPlane /></Button>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBox;","C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\ChatList.jsx",["59","60"],"C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\Chat.jsx",[],"C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\components\\EditProfile.jsx",[],"C:\\Users\\greta\\Desktop\\React Projects\\chat-app\\src\\api\\jsonbin.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":17},{"ruleId":"65","severity":1,"message":"69","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":12},{"ruleId":"70","severity":1,"message":"71","line":43,"column":64,"nodeType":"72","messageId":"73","endLine":43,"endColumn":66},{"ruleId":"70","severity":1,"message":"74","line":81,"column":67,"nodeType":"72","messageId":"73","endLine":81,"endColumn":69},{"ruleId":"65","severity":1,"message":"75","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":11},{"ruleId":"76","severity":1,"message":"77","line":20,"column":42,"nodeType":"78","messageId":"79","endLine":20,"endColumn":44},{"ruleId":"80","severity":1,"message":"81","line":22,"column":33,"nodeType":"82","endLine":22,"endColumn":110},{"ruleId":"76","severity":1,"message":"77","line":11,"column":46,"nodeType":"78","messageId":"79","endLine":11,"endColumn":48},{"ruleId":"76","severity":1,"message":"77","line":13,"column":40,"nodeType":"78","messageId":"79","endLine":13,"endColumn":42},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'LoginPage' is defined but never used.","Identifier","unusedVar","'data' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'App' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","Assignments to the 'filteredMessagesArray' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation"]